#!/usr/bin/env python3

import time
import sys
import os
import re

RS = chr(30)
PATHNAME="posts"

def timestamp(): return int(time.time())

def append(what):
	with open(PATHNAME, "a") as fp:
		fp.write(what)
	print("Appended")
	return 0

def postsegment(*args):
	return RS + "\n".join(args) + "\n\n"

def path_to_href(pathname):
	href = pathname.split("/")
	if href[0] == ".": href.pop(0)
	href.pop(0)
	return "/".join([""]+href)

def articleheader(pathname, title):
	href = path_to_href(pathname)
	return ("<h1>" +
		"<img class=\"emoji\" alt=\"emoji\" src=\"/pics/article.svg\"/> " +
		("<a href=\"%s\">%s</a>" % (href, title)) +
		"</h1>")

def write_article(pathname, text, title, YMD, timestamp):
        with open("templates/item.html") as fp:
                tpl = fp.read(-1)
        tpl = (tpl
               .replace("{{TITLE}}", title)
               .replace("{{TIMESTAMP}}", timestamp)
               .replace("{{YMD}}", YMD)
               .replace("{{BODY}}", text))
        with open(pathname, "w") as fp:
                fp.write(tpl)
                print()

def note(*args):
	print("Type your note (ends at EOF)\n")
	content = "<img class=\"emoji\" alt=\"emoji\" src=\"/pics/note.svg\"/> " + sys.stdin.read(-1).strip()
	stamp = str(timestamp())
	return append(postsegment(stamp, "note", content))

def article(*args):
        name = input("File name: ")
        pathname = "render/articles/" + name
        text = sys.stdin.read(-1)
        title = re.search("<h1>([^<]+)</h1>", text).group(1)
        blurb = re.search("<p>(.+?)</p>", text).group(1)
        timestamp = time.strftime("%s")
        ymd = time.strftime("%Y-%m-%d")
        content = articleheader(pathname, title) + "\n" + blurb
        write_article(pathname, text, title, ymd, timestamp)
        append(postsegment(timestamp, "article", content))

def main():
	FNS = {"n": note, "a": article}
	answer = ""
	while True:
		answer = input("Select post type:\n\t(n)ote\n\t(a)rticle\n> ")
		if answer in FNS: break
	return FNS[answer.strip()](*sys.argv[1:])

if __name__ == "__main__":
	sys.exit(main())
